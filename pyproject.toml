[project]
name = "session_sniffer"
version = "1.4.0.rc2+20250823.1430"
dependencies = [
    "colorama==0.4.6",
    "dnspython==2.7.0",
    "geoip2==5.1.0",
    "packaging==25.0",
    "prettytable==3.16.0",
    "psutil==7.0.0",
    "pydantic==2.11.7",
    "pypresence==4.3.0",
    "PyQt6==6.8.1",
    "pywin32==311; platform_system == 'Windows'",
    "QDarkStyle==3.2.3",
    "requests==2.32.5",
    "rich==14.1.0",
    "sentinel==1.0.0",
    "toml==0.10.2",
    "types-requests==2.32.4.20250809",
    "types-toml==0.10.8.20240310",
    "tzlocal==5.3.1",
    "urllib3==2.5.0",
    "WMI==1.5.1; platform_system == 'Windows'",

    # Security fixes
    "aiohttp>=3.12.14",
    "certifi>=2024.7.4",
    "idna>=3.7",
]
requires-python = ">=3.13"
authors = [
    {name = "BUZZARDGTA"},
]
description = "A packet sniffer (also known as an IP sniffer/puller) specifically designed for Peer-To-Peer (P2P) video games on PC and consoles (PlayStation and Xbox)."
readme = "README.md"


[project.urls]
Documentation = "https://github.com/BUZZARDGTA/Session-Sniffer/wiki"
Repository = "https://github.com/BUZZARDGTA/Session-Sniffer"
Issues = "https://github.com/BUZZARDGTA/Session-Sniffer/issues"
Discord = "https://discord.gg/hMZ7MsPX7G"


[tool.mypy]
python_version = "3.13"
disable_error_code = [
    "arg-type",
    "no-untyped-call",
    "no-untyped-def",
]
check_untyped_defs = true
ignore_missing_imports = true
strict = true


[tool.pydocstyle]
ignore = [
    "D101",
    "D102",
    "D103",
    "D107",
    "D203",
    "D204",
    "D213",
    "D300",
    "D401",
    "D404",
    "D407",
    "D406",
    "D413",
]


[tool.pylint.master]
enable = "all"
extension-pkg-whitelist = "PyQt6"
ignore = [
    ".dev",
    ".history",
    ".venv",
]
ignore-patterns = "^\\.#|.*\\.pyi"
py-version = "3.13"
recursive = true

[tool.pylint."messages control"]
disable = [
    "global-statement",
    "import-outside-toplevel",
    "line-too-long",
    "locally-disabled",
    "missing-class-docstring",
    "missing-function-docstring",
    "redefined-outer-name",
    "suppressed-message",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches",
    "too-many-locals",
    "too-many-statements",
]


[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "strict"


[tool.ruff]
target-version = "py313"
exclude = [
    ".history",
    ".venv",
]

[tool.ruff.lint]
ignore = [
    "ANN201",  # missing-return-type-undocumented-public-function
    "ANN202",  # missing-return-type-private-function
    "ANN204",  # missing-return-type-special-method
    "ANN205",  # missing-return-type-static-method
    "ANN206",  # missing-return-type-class-method
    "C901",    # complex-structure
    "D101",    # undocumented-public-class
    "D102",    # undocumented-public-method
    "D103",    # undocumented-public-function
    "D105",    # undocumented-magic-method
    "D107",    # undocumented-public-init
    "E501",    # line-too-long
    "ERA001",  # commented-out-code
    "FIX002",  # line-contains-todo
    "N806",    # non-lowercase-variable-in-function
    "PLC0415", # import-outside-top-level
    "PLR0911", # too-many-return-statements
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0915", # too-many-statements
    "PLW0603", # global-statement
    "S602",    # subprocess-popen-with-shell-equals-true
    "S603",    # subprocess-without-shell-equals-true
    "T201",    # print
    "TD003",   # missing-todo-link
    "TD005",   # missing-todo-description
]
select = ["ALL"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.isort]
known-first-party = [
    "modules",
]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.vulture]
exclude = [
    ".history",
    ".venv",
]
min_confidence = 61
